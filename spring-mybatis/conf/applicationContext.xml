<?xml version="1.0" encoding="UTF-8"?>  
<beans xmlns="http://www.springframework.org/schema/beans"  
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"  
    xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"  
    xmlns:jpa="http://www.springframework.org/schema/data/jpa" 
    xmlns:websocket="http://www.springframework.org/schema/websocket"
    xmlns:security="http://www.springframework.org/schema/security" 
    xmlns:jaxws="http://cxf.apache.org/jaxws" 
    xsi:schemaLocation="  
        http://www.springframework.org/schema/aop   
        http://www.springframework.org/schema/aop/spring-aop-3.1.xsd  
        http://www.springframework.org/schema/security   
        http://www.springframework.org/schema/security/spring-security-3.2.xsd  
        http://www.springframework.org/schema/beans   
        http://www.springframework.org/schema/beans/spring-beans-3.1.xsd  
        http://www.springframework.org/schema/data/jpa   
        http://www.springframework.org/schema/data/jpa/spring-jpa-1.3.xsd  
        http://www.springframework.org/schema/tx   
        http://www.springframework.org/schema/tx/spring-tx-3.1.xsd  
        http://www.springframework.org/schema/context   
        http://www.springframework.org/schema/context/spring-context-3.1.xsd
        http://www.springframework.org/schema/websocket http://www.springframework.org/schema/websocket/spring-websocket.xsd">  
   
     
    <!-- 数据库配置文件位置 -->  
    <context:property-placeholder location="classpath:/jdbc.properties" />
    
    <context:component-scan base-package="com.cn.ctbri" />
    
    
    <!-- 配置dbcp数据源 -->
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}"/>
		<property name="password" value="${jdbc.password}" />
		<property name="initialSize" value="${jdbc.initialSize}" />
		<property name="maxActive" value="${jdbc.maxActive}" />
		<property name="maxIdle" value="${jdbc.maxIdle}" />
		<property name="maxWait" value="${jdbc.maxWait}" />
	</bean>  
  
    <!-- 使用JDBC事物 -->  
    <bean id="transactionManager"  
        class="org.springframework.jdbc.datasource.DataSourceTransactionManager">  
        <property name="dataSource" ref="dataSource" />  
    </bean>  
	<!-- 使用annotation注解方式配置事务   -->
	<tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true" />
  	
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">  
        <property name="dataSource" ref="dataSource" />  
        <property name="configLocation" value="classpath:mybatis.xml"></property> 
    </bean>  
    
    <bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">  
        <constructor-arg index="0" ref="sqlSessionFactory" />  
    </bean>

	<bean id="websecDao" class="org.mybatis.spring.mapper.MapperFactoryBean">  
     <property name="mapperInterface" value="com.cn.ctbri.dao.WebsecMapper"></property>  
     <property name="sqlSessionFactory" ref="sqlSessionFactory"></property>  
    </bean> 
	<bean id="ipDao" class="org.mybatis.spring.mapper.MapperFactoryBean">  
     <property name="mapperInterface" value="com.cn.ctbri.dao.IpMapper"></property>  
     <property name="sqlSessionFactory" ref="sqlSessionFactory"></property>  
    </bean> 
    <bean id="cityDao" class="org.mybatis.spring.mapper.MapperFactoryBean">  
     <property name="mapperInterface" value="com.cn.ctbri.dao.CityMapper"></property>  
     <property name="sqlSessionFactory" ref="sqlSessionFactory"></property>  
    </bean>
    <bean id="cntByTypeDao" class="org.mybatis.spring.mapper.MapperFactoryBean">  
     <property name="mapperInterface" value="com.cn.ctbri.dao.CntByTypeMapper"></property>  
     <property name="sqlSessionFactory" ref="sqlSessionFactory"></property>  
    </bean>
     <bean id="cntByHourDao" class="org.mybatis.spring.mapper.MapperFactoryBean">  
     <property name="mapperInterface" value="com.cn.ctbri.dao.CntByHourMapper"></property>  
     <property name="sqlSessionFactory" ref="sqlSessionFactory"></property>  
    </bean>
     <bean id="cntBySrcDao" class="org.mybatis.spring.mapper.MapperFactoryBean">  
     <property name="mapperInterface" value="com.cn.ctbri.dao.CntBySrcMapper"></property>  
     <property name="sqlSessionFactory" ref="sqlSessionFactory"></property>  
    </bean>
   
    
       <bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
        <property name="jobFactory">
            <bean class="org.springframework.scheduling.quartz.SpringBeanJobFactory" />
        </property>
        <property name="applicationContextSchedulerContextKey" value="applicationContextKey" />
        <property name="startupDelay" value="0" />
        <property name="overwriteExistingJobs" value="true" />
        <property name="exposeSchedulerInRepository" value="true" />
        
        <property name="triggers">
            <list>
                <!-- <ref bean="cronTrigger_1" />--> 
                 <ref bean="cronTrigger_2" />
            </list>
        </property>
    </bean>

    <bean id="cronTrigger_1"
        class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
        <property name="jobDetail" ref="jobDetail_1" />
        <property name="cronExpression" value="10 05 14 * * ?" />
    </bean>
    <bean id="jobDetail_1"
        class="org.springframework.scheduling.quartz.JobDetailFactoryBean">
       <property name="jobClass" value="com.cn.ctbri.schedular.QuartzWebsecUpd" />
    </bean>
    <bean id="quartzWebsecUpd" class="com.cn.ctbri.schedular.QuartzWebsecUpd" />
     
     
     <bean id="cronTrigger_2"
        class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
        <property name="jobDetail" ref="jobDetail_2" />
        <property name="cronExpression" value="0/1 * * * * ?" />
    </bean>    
    <bean id="jobDetail_2"
        class="org.springframework.scheduling.quartz.JobDetailFactoryBean">
       <property name="jobClass" value="com.cn.ctbri.schedular.QuartzWebsecCnt" />
    </bean>
    <bean id="quartzWebsecCnt" class="com.cn.ctbri.schedular.QuartzWebsecCnt" />
</beans>  