<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
						http://www.springframework.org/schema/beans/spring-beans.xsd
						http://www.springframework.org/schema/context 
						http://www.springframework.org/schema/context/spring-context.xsd
						http://www.springframework.org/schema/tx   
        				http://www.springframework.org/schema/tx/spring-tx.xsd " >


	<import resource="classpath:rabbitmq.xml" />
	
	
	<!-- 扫描指定package下所有带有如@controller,@services,@resource,@ods并把所注释的注册为Spring Beans -->
	<context:component-scan base-package="com.cn.ctbri,com.lin.consumer,com.lin.producer,com.mucfc" />
		
	
    <context:property-placeholder location="classpath:jdbc.properties" />

		
	<!-- 激活annotation功能 -->
	<context:annotation-config />
	<!-- 激活annotation功能 -->
	<context:spring-configured />

   <!--  <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource" > -->
		<!-- <property name="driverClass" value="${quartz.driverClassName}"/>
		<property name="jdbcUrl" value="${quartz.url}"/>
		<property name="user"  value="${quartz.username}"/>
		<property name="password" " value="${quartz.password}"/>
		<property name="minPoolSize"  value="${quartz.minPoolSize}"/>
		<property name="initialPoolSize" value="${quartz.initialPoolSize}"/> --> 
    <!-- 配置dbcp数据源 -->
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}"/>
		<property name="password" value="${jdbc.password}" />
		<property name="initialSize" value="${jdbc.initialSize}" />
		<property name="maxActive" value="${jdbc.maxActive}" />
		<property name="maxIdle" value="${jdbc.maxIdle}" />
		<property name="maxWait" value="${jdbc.maxWait}" />
		
		<property name="validationQuery" value="select 1"/>
		<property name="testOnBorrow" value="false"/>
		<property name="testWhileIdle" value="true"/>
		<property name="testOnReturn" value="false"/>
		<property name="numTestsPerEvictionRun" value="${jdbc.maxActive}"/>
		<!-- 6s 每6秒钟检測空暇连接超过10秒的连接-->
		<property name="timeBetweenEvictionRunsMillis" value="6000" />  
		<property name="minEvictableIdleTimeMillis" value="10000" /> 
		 
		<property name="removeAbandoned" value="true"/>
	</bean>  
	  <!-- 使用JDBC事物 -->  
	    <bean id="transactionManager"  
	        class="org.springframework.jdbc.datasource.DataSourceTransactionManager">  
	        <property name="dataSource" ref="dataSource" />  
	    </bean>  
		<!-- 使用annotation注解方式配置事务   -->
		<tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true" />
	  	
	    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">  
	        <property name="dataSource" ref="dataSource" />  
	        <property name="configLocation" value="classpath:mybatis.xml"></property> 
	    </bean>  
	    
	    <bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">  
	        <constructor-arg index="0" ref="sqlSessionFactory" />  
	    </bean>
		
	<!-- quartz持久化存储  --> 
	<bean name="quartzScheduler"
		class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="dataSource">
			<ref bean="dataSource" />
		</property>
		<property name="applicationContextSchedulerContextKey" value="applicationContext" />
        <property name="quartzProperties">
        <props>
         <prop key="org.quartz.scheduler.instanceName">CRMscheduler</prop>
            <prop key="org.quartz.scheduler.instanceId">AUTO</prop>
            <!-- 线程池配置 -->
            <prop key="org.quartz.threadPool.class">org.quartz.simpl.SimpleThreadPool</prop>
            <prop key="org.quartz.threadPool.threadCount">20</prop>
            <prop key="org.quartz.threadPool.threadPriority">5</prop>
            <prop key="org.quartz.jobStore.misfireThreshold">120000</prop>
            <!-- JobStore 配置 -->
            <prop key="org.quartz.jobStore.class">org.quartz.impl.jdbcjobstore.JobStoreTX</prop>
            <!-- 集群配置 -->
            <prop key="org.quartz.jobStore.isClustered">false</prop>
            <prop key="org.quartz.jobStore.clusterCheckinInterval">15000</prop>
            <prop key="org.quartz.jobStore.maxMisfiresToHandleAtATime">1</prop>                 
               <!-- 数据表设置 -->
            <prop key="org.quartz.jobStore.tablePrefix">qrtz_</prop>
            <prop key="org.quartz.jobStore.dataSource">qzDS</prop>
        </props>       
        </property>
	</bean>  
  	
</beans>