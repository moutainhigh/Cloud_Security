<?xml version="1.0" encoding="UTF-8"?>  
<beans xmlns="http://www.springframework.org/schema/beans"  
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"  
    xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"  
    xmlns:jpa="http://www.springframework.org/schema/data/jpa" 
    xmlns:websocket="http://www.springframework.org/schema/websocket"
    xmlns:security="http://www.springframework.org/schema/security" 
    xmlns:jaxws="http://cxf.apache.org/jaxws" 
    xsi:schemaLocation="  
        http://www.springframework.org/schema/aop   
        http://www.springframework.org/schema/aop/spring-aop-4.0.xsd  
        http://www.springframework.org/schema/security   
        http://www.springframework.org/schema/security/spring-security-3.2.xsd  
        http://www.springframework.org/schema/beans   
        http://www.springframework.org/schema/beans/spring-beans-4.0.xsd  
        http://www.springframework.org/schema/data/jpa   
        http://www.springframework.org/schema/data/jpa/spring-jpa-1.3.xsd  
        http://www.springframework.org/schema/tx   
        http://www.springframework.org/schema/tx/spring-tx-4.0.xsd  
        http://www.springframework.org/schema/context   
        http://www.springframework.org/schema/context/spring-context-4.0.xsd
        http://www.springframework.org/schema/websocket http://www.springframework.org/schema/websocket/spring-websocket.xsd
        http://cxf.apache.org/jaxws http://cxf.apache.org/schemas/jaxws.xsd">  
    <!-- 
    	<import resource="classpath:META-INF/cxf/cxf.xml" />
	<import resource="classpath:META-INF/cxf/cxf-extension-soap.xml" />
	<import resource="classpath:META-INF/cxf/cxf-servlet.xml" />
	
	<jaxws:endpoint id="greetingService"
		implementor="com.cn.ctbri.webservice.impl.GreetingServiceImpl" 
		address="/GreetingService" />
     -->
    <!-- 数据库配置文件位置 -->  
    <context:property-placeholder location="classpath:/jdbc.properties" /> 
    
    <context:component-scan base-package="com.cn.ctbri" /> 
    
    <!-- 配置dbcp数据源 -->  
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}"/>
		<property name="password" value="${jdbc.password}" />
		<property name="initialSize" value="${jdbc.initialSize}" />
		<property name="maxActive" value="${jdbc.maxActive}" />
		<property name="maxIdle" value="${jdbc.maxIdle}" />
		<property name="maxWait" value="${jdbc.maxWait}" />
	</bean>  
  
    <!-- 使用JDBC事物 -->  
    <bean id="transactionManager"  
        class="org.springframework.jdbc.datasource.DataSourceTransactionManager">  
        <property name="dataSource" ref="dataSource" />  
    </bean>  
	<!-- 使用annotation注解方式配置事务   -->
	<tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true" />
  	
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">  
        <property name="dataSource" ref="dataSource" />  
        <property name="configLocation" value="classpath:sqlMapConfig.xml"></property> 
    </bean>  
    
    <bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">  
        <constructor-arg index="0" ref="sqlSessionFactory" />  
    </bean>

    <!-- Timer schedule -->
    <!--要调度的对象-->
    <bean id="taskJobBean" class="com.cn.ctbri.common.Scheduler4Task" />
    <bean id="taskJobDetail"
    	class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
    	<property name="targetObject" ref="taskJobBean" />
    	<property name="targetMethod" value="execute" />
    	<property name="concurrent" value="false" />
    </bean>
    <bean id="taskTrigger"
    	class="org.springframework.scheduling.quartz.CronTriggerBean">
    	<property name="jobDetail" ref="taskJobDetail" />
    	<property name="cronExpression" value="0 0/1 * * * ?" />
    </bean>
    
	 <!--要调度的对象-->
    <bean id="resultJobBean" class="com.cn.ctbri.common.Scheduler4Result" />
    <bean id="resultJobDetail"
    	class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
    	<property name="targetObject" ref="resultJobBean" />
    	<property name="targetMethod" value="execute" />
    	<property name="concurrent" value="false" />
    </bean>
    <bean id="resultTrigger"
    	class="org.springframework.scheduling.quartz.CronTriggerBean">
    	<property name="jobDetail" ref="resultJobDetail" />
    	<property name="cronExpression" value="0 0/3 * * * ?" />
    </bean>
    
    <!--要调度的对象-->
    <bean id="progressJobBean" class="com.cn.ctbri.common.Scheduler4Progress" />
    <bean id="progressJobDetail"
        class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <property name="targetObject" ref="progressJobBean" />
        <property name="targetMethod" value="execute" />
        <property name="concurrent" value="false" />
    </bean>
    <bean id="progressTrigger"
        class="org.springframework.scheduling.quartz.CronTriggerBean">
        <property name="jobDetail" ref="progressJobDetail" />
        <property name="cronExpression" value="0/30 * * * * ?" />
    </bean>
    
        <!-- 将lazy-init='false'那么容器启动就会执行调度程序   -->
    <bean id="startQuertz"
    	class="org.springframework.scheduling.quartz.SchedulerFactoryBean"
    	lazy-init="false">
    	<property name="triggers">
    		<list>
    			<ref bean="taskTrigger" />
    			<ref bean="resultTrigger" />
    			<ref bean="progressTrigger" />
    		</list>
    	</property>
    </bean>

</beans>  